{"version":3,"sources":["components/IconCard/index.js","components/Wrapper/index.js","components/Jumbotron/index.js","components/Navbar/index.js","components/IconContainer/index.js","App.js","index.js"],"names":["IconCard","props","react_default","a","createElement","className","onClick","id","src","image","alt","Wrapper","children","Jumbotron","Navbar","comment","topScore","currentScore","IconContainer","App","state","icons","iconsShuffled","highScore","clickedIcons","shuffleImgs","_this","i","length","j","Math","floor","random","_ref","setState","IconClicked","console","log","clickFlag","newClickedIcons","push","newScore","newHighScore","_this2","this","components_Wrapper","components_Jumbotron","components_Navbar","components_IconContainer","map","components_IconCard","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.8d28c5ec.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction IconCard(props) {\n  return (\n    <div className=\"card\" onClick={props.onClick}>\n      <img id={props.id} src={props.image} className=\"card-img-top\" alt={props.id} >\n      </img>\n      </div>\n      );\n    }\n    \n    export default IconCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Jumbotron(props) {\n  return (\n    <div className=\"jumbotron jumbotron-fluid\">\n    <div className=\"container\">\n      <h1 className=\"display-4\">Symbol Clicky Game</h1>\n      <p className=\"lead\">Click on a icon to earn a point, but don't click on the same icon twice!</p>\n    </div>\n  </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Navbar(props) {\n  return (\n    <nav className=\"navbar navbar-expand-lg\">\n      <div className=\"container\">\n        <ul>\n          <li className=\"comment\">{props.comment}</li>\n          <li className=\"score\"><span className=\"grey\">Top Score:</span> {props.topScore} <span className=\"grey\">|| Current Score: </span>{props.currentScore}</li>\n        </ul>\n      </div>\n        {/* <p className=\"comment\" id=\"comment\">{props.comment}</p>\n        <p className=\"topScore\" id=\"top\">Top Score: {props.topScore} | Current Score: {props.currentScore}</p> */}\n    </nav>\n  );\n}\n\nexport default Navbar;","import React from \"react\";\nimport \"./style.css\";\n\nfunction IconContainer(props) {\n  return <div className=\"IconContainer\">{props.children}</div>;\n}\n\nexport default IconContainer;","import React, { Component } from \"react\";\nimport IconCard from \"./components/IconCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport icons from \"./icons.json\";\nimport Navbar from \"./components/Navbar\";\nimport IconContainer from \"./components/IconContainer\";\n\n\n\n\nclass App extends Component {\n  // Setting this.state.icons to the icons json array\n  state = {\n    icons,\n    iconsShuffled: [],\n    currentScore: 0,\n    highScore: 0,\n    clickedIcons: [],\n    comment: \"Click an image to begin!\"\n  };\n\n\n  shuffleImgs = id => {\n    let iconsShuffled = this.state.icons;\n    for (let i = iconsShuffled.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [iconsShuffled[i], iconsShuffled[j]] = [iconsShuffled[j], iconsShuffled[i]];\n    }\n    this.setState({\n      iconsShuffled\n    })\n  }\n\n  IconClicked = id => {\n    console.log(id, \"Image is clicked!\")\n    let clickFlag = false;\n    //when img is clicked, check if id is in clickedIcons array\n    for (let i = 0; i < this.state.clickedIcons.length; i++) {\n      if (id === this.state.clickedIcons[i]) {\n        console.log(\"IF is true\");\n        clickFlag = true; //set a flag to differentiate which state changes to make\n      }\n    }\n        \n    if(clickFlag) {\n        // - if id already clicked, setState of comment to \"Wrong guess! Play again?\", setState of currentScore to 0, empty array\n      this.setState({\n          comment: \"Whoops, game over! Click to play again!\",\n          currentScore: 0,\n          clickedIcons: []\n        })\n    } else {\n    // - if not, push id to clickedIcons, setState currentScore to currentScore + 1, shuffle image cards (do this in render, not here), setState of comment to \"Good Job, keep guessing!\"\n        \n    //throw the current state into a new variable so state can change values and thus update\n        const newClickedIcons = this.state.clickedIcons;\n        newClickedIcons.push(id);\n    //throw the current state into a new variable so state can change values and thus update\n        const newScore = this.state.currentScore +1;\n        let newHighScore = this.state.highScore;\n\n    //if the current score beats the previous highest score, then update to the new highest score\n        if(newScore > this.state.highScore) {\n           newHighScore = newScore;\n        }\n        this.setState({\n          clickedIcons: newClickedIcons,\n          currentScore: newScore,\n          highScore: newHighScore,\n          comment: \"Good job, keep guessing!\"\n        })\n        this.shuffleImgs(); //only shuffle the images when the game is still in play\n      }\n  }\n\n  render() {\n    return (\n      <Wrapper>\n        <Jumbotron>Symbol Clicky Game</Jumbotron>\n        <Navbar\n          comment={this.state.comment}\n          currentScore={this.state.currentScore}\n          topScore={this.state.highScore}\n        />\n        <IconContainer>\n          {this.state.icons.map(icons => (\n            <IconCard\n              id={icons.id}\n              key={icons.id}\n              image={icons.image}\n              onClick={() => { this.IconClicked(icons.id) }}\n            />\n          ))}\n        </IconContainer>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}